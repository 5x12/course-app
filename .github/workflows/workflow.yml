# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      # run: git clone https://github.com/5x12/course-app.git

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$HOME/.local/bin:$PATH

    # - name: Install Poetry
    #   uses: snok/install-poetry@v1
    #   with:
    #       virtualenvs-in-project: true

    # - name: Load cached venv
    #   id: cached-poetry-dependencies
    #   uses: actions/cache@v3
    #   with:
    #     path: .venv
    #     key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry run make install

    - name: Lint with flake8
      run: poetry run make check